{"version":3,"sources":["Presentational/Single.js","Presentational/Multiple.js","assets/Clear.mp4","assets/broken.mp4","assets/Mist.mp4","assets/Few.mp4","assets/Rain.mp4","assets/Shower.mp4","assets/Scattered.mp4","assets/Snow.mp4","assets/Thunder.mp4","Presentational/Display.js","Presentational/Error.js","Components/Main.js","App.js","assets/Clouds.mp4","reportWebVitals.js","index.js"],"names":["Single","props","id","className","type","placeholder","onChange","data","Multiple","Display","sentWeather","propWeather","displayVideo","Clear","Clouds","Atmosphere","Drizzle","Rain","Thunderstorm","Snow","autoPlay","playsInline","muted","loop","src","style","marginTop","info","name","sys","country","main","temp","feels_like","weather","description","toUpperCase","five","list","map","x","i","display","dt_txt","Error","color","Main","UI","ERROR","API","useState","option","setOption","inputOne","setInputOne","inputTwo","setInputTwo","setData","setTheWeather","fiveData","setfiveData","setDisplay","err","setErr","changePlaceholder","e","txt","target","value","alert","fetchAPI","inputFirst","inputSecond","a","fetch","result","json","response","fiveResult","fiveResponse","cod","zipResult","zipResponse","fiveZipResult","fiveZipResponse","console","log","coordinatesResult","coordinatesResponse","fiveCoordinatesResult","fiveCoordinatesResponse","event","textAlign","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.296be7fb.chunk.js","sourcesContent":["export default function Single (props) {\r\n    return (\r\n        <input id=\"query\" className=\"form-control\" type=\"text\" placeholder=\"Enter Input\" onChange={props.data}></input>\r\n    )\r\n}\r\n","\r\nexport default function Multiple(props) {\r\n    return (\r\n    <div>\r\n        <input id=\"coordQueryOne\" className=\"form-control\" type=\"text\" placeholder=\"Enter Latitude\" onChange={props.data}></input><br></br>\r\n        <input id=\"coordQueryTwo\" className=\"form-control\" type=\"text\" placeholder=\"Enter Longitude\" onChange={props.data}></input>\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Clear.3417e130.mp4\";","export default __webpack_public_path__ + \"static/media/broken.c4f091ce.mp4\";","export default __webpack_public_path__ + \"static/media/Mist.0170cd28.mp4\";","export default __webpack_public_path__ + \"static/media/Few.8d13ae43.mp4\";","export default __webpack_public_path__ + \"static/media/Rain.300e01bc.mp4\";","export default __webpack_public_path__ + \"static/media/Shower.78e32b2c.mp4\";","export default __webpack_public_path__ + \"static/media/Scattered.dd8bd2f9.mp4\";","export default __webpack_public_path__ + \"static/media/Snow.adebf5b2.mp4\";","export default __webpack_public_path__ + \"static/media/Thunder.3fcd1a19.mp4\";","import '../App.css';\r\nimport Clear from '../assets/Clear.mp4'\r\nimport Clouds from '../assets/broken.mp4'\r\nimport Few from '../assets/Few.mp4'\r\nimport Atmosphere from '../assets/Mist.mp4'\r\nimport Rain from '../assets/Rain.mp4'\r\nimport Scattered from '../assets/Scattered.mp4'\r\nimport Drizzle from '../assets/Shower.mp4'\r\nimport Snow from '../assets/Snow.mp4'\r\nimport Thunderstorm from '../assets/Thunder.mp4'\r\nexport default function Display(props) {\r\n\r\n    let propWeather = props.displayVideo;\r\n    let sentWeather;\r\n\r\n    if (propWeather === 'Clear') {\r\n        sentWeather = Clear\r\n    }\r\n    else if (propWeather === 'Clouds') {\r\n        sentWeather = Clouds\r\n    }\r\n    else if (propWeather === 'Atmosphere') {\r\n        sentWeather = Atmosphere\r\n    }\r\n    else if (propWeather === 'Clouds') {\r\n        sentWeather = Clouds\r\n    }\r\n    else if (propWeather === 'Drizzle') {\r\n        sentWeather = Drizzle\r\n    }\r\n    else if (propWeather === 'Rain') {\r\n        sentWeather = Rain\r\n    }\r\n    else if (propWeather === 'Thunderstorm') {\r\n        sentWeather = Thunderstorm\r\n    }\r\n    else if (propWeather === 'Snow') {\r\n        sentWeather = Snow\r\n    }\r\n    else {\r\n        sentWeather = Atmosphere\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        {\r\n                            <div className=\"display\">\r\n                                <video autoPlay playsInline muted loop id=\"backVideo\" key={sentWeather}>\r\n                                    <source src={sentWeather} type=\"video/mp4\"></source>\r\n                            Your browser does not support HTML5 video.\r\n                            </video>\r\n                                <div style={{ marginTop: \"60px\" }}>\r\n                                    <p>City:  {props.info.name}, {props.info.sys.country}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Current Temperature: {props.info.main.temp} F</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Feels Like: {props.info.main.feels_like} F </p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>Description: {(props.info.weather[0].description).toUpperCase()}</p>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"displayTwo\">\r\n                            <div>\r\n                                <h3> Next Five Days Forecast</h3>\r\n                                <p>City:  {props.info.name}, {props.info.sys.country}</p>\r\n                            </div>\r\n                            {\r\n                                props.five.list.map((x, i) => {\r\n                                    return (\r\n                                        <div style={{ display: \"inline\" }} key={i}>\r\n                                            <div className=\"displayFive\">\r\n                                                <p> Date and Time: {x.dt_txt}</p>\r\n                                                <p>Current Temperature: {x.main.temp} F</p>\r\n                                                <p>Feels Like: {x.main.feels_like} F </p>\r\n                                                <p>Description: {(x.weather[0].description).toUpperCase()}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import '../App.css';\r\n\r\nexport default function Error() {\r\n    return (\r\n        <div className=\"error\">\r\n            <h4 style={{ color: \"white\" }}> <span style={{ color: \"red\" }}>Error,</span> search criteria did not find any result, please try again.</h4>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport Single from '../Presentational/Single'\r\nimport Multiple from '../Presentational/Multiple'\r\nimport Display from '../Presentational/Display'\r\nimport Error from '../Presentational/Error'\r\nimport '../App.css';\r\n\r\nexport default function Main() {\r\n    let UI, ERROR;\r\n    let API = \"a935afd0be256a5f80d968bf1f14a88e\";\r\n    const [option, setOption] = useState('--Select Search Option--')\r\n    const [inputOne, setInputOne] = useState('')\r\n    const [inputTwo, setInputTwo] = useState('')\r\n    const [data, setData] = useState('')\r\n    const [weather, setTheWeather] = useState('')\r\n    const [fiveData, setfiveData] = useState('')\r\n    const [display, setDisplay] = useState(false)\r\n    const [err, setErr] = useState(false)\r\n\r\n    let changePlaceholder = (e) => {\r\n        let txt = e.target.id\r\n        if (txt === 'type') {\r\n            setOption(e.target.value)\r\n        }\r\n        else if (txt === 'query') {\r\n            setInputOne(e.target.value)\r\n        }\r\n\r\n        else if (txt === 'coordQueryOne') {\r\n            setInputOne(e.target.value)\r\n        }\r\n        else if (txt === 'coordQueryTwo') {\r\n            setInputTwo(e.target.value)\r\n        }\r\n        else {\r\n\r\n            if (option === '--Select Search Option--') {\r\n                alert(\" Please Select valid option\")\r\n            }\r\n\r\n            if (option === \"City\") {\r\n                if (inputOne === '') {\r\n\r\n                    alert(\"Please Enter City Name\")\r\n                }\r\n                else {\r\n\r\n                    fetchAPI(inputOne)\r\n\r\n                }\r\n            }\r\n            else if (option === \"Zip code\") {\r\n                if (inputOne === '') {\r\n\r\n                    alert(\"Please Enter Zip Code\")\r\n                }\r\n                else {\r\n\r\n                    fetchAPI(inputOne)\r\n\r\n                }\r\n            }\r\n            else if (option === \"Coordinates\") {\r\n                if (inputOne === '') {\r\n                    alert(\"Please Enter Latitude\")\r\n                }\r\n                if (inputTwo === '') {\r\n                    alert(\"Please Enter Longitude\")\r\n                }\r\n                else {\r\n                    fetchAPI(inputOne, inputTwo)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    let fetchAPI = async (inputFirst, inputSecond) => {\r\n\r\n        if (option === \"City\") {\r\n            var result = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\" + inputFirst + \"&units=imperial&APPID=\" + API)\r\n            var response = await result.json()\r\n\r\n            var fiveResult = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\" + inputFirst + \"&units=imperial&APPID=\" + API)\r\n            var fiveResponse = await fiveResult.json()\r\n\r\n            if (response.cod === \"404\" || fiveResponse.cod === \"404\") {\r\n                setErr(true)\r\n                setDisplay(false)\r\n            }\r\n            else {\r\n                setErr(false)\r\n                setData(response)\r\n                setTheWeather(response.weather[0].main)\r\n                setfiveData(fiveResponse)\r\n                setDisplay(true)\r\n            }\r\n        }\r\n        else if (option === \"Zip code\") {\r\n            var zipResult = await fetch(\"https://api.openweathermap.org/data/2.5/weather?zip=\" + inputFirst + \"&units=imperial&appid=\" + API)\r\n\r\n            var zipResponse = await zipResult.json()\r\n\r\n            var fiveZipResult = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?zip=\" + inputFirst + \"&units=imperial&APPID=\" + API)\r\n            var fiveZipResponse = await fiveZipResult.json()\r\n\r\n            console.log(zipResponse, fiveZipResponse, \"Zip\")\r\n            if (zipResponse.cod === \"400\" || fiveZipResponse.cod === \"400\" || zipResponse.cod === \"404\" || zipResponse.cod === \"404\") {\r\n                setErr(true)\r\n                setDisplay(false)\r\n            }\r\n            else {\r\n                setErr(false)\r\n                setData(zipResponse)\r\n                setfiveData(fiveZipResponse)\r\n                setDisplay(true)\r\n            }\r\n        }\r\n        else {\r\n            var coordinatesResult = await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + inputFirst + \"&lon=\" + inputSecond + \"&units=imperial&appid=\" + API)\r\n\r\n            var coordinatesResponse = await coordinatesResult.json()\r\n            console.log(coordinatesResponse)\r\n\r\n\r\n            var fiveCoordinatesResult = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\" + inputFirst + \"&lon=\" + inputSecond + \"&units=imperial&APPID=\" + API)\r\n            var fiveCoordinatesResponse = await fiveCoordinatesResult.json()\r\n\r\n            if (coordinatesResponse.cod === \"400\" || fiveCoordinatesResponse.cod === \"400\") {\r\n                setErr(true)\r\n                setDisplay(false)\r\n            }\r\n            else {\r\n                setErr(false)\r\n                setData(coordinatesResponse)\r\n                setfiveData(fiveCoordinatesResponse)\r\n                setDisplay(true)\r\n            }\r\n        }\r\n\r\n    }\r\n    if (display) {\r\n        UI = <Display info={data} five={fiveData} displayVideo={weather} />\r\n    }\r\n    else {\r\n        UI = (<div></div>)\r\n    }\r\n\r\n    if (err) {\r\n        ERROR = <Error />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"App\">\r\n                <div className=\"contain\">\r\n\r\n                    <div className=\"form-group\" >\r\n\r\n                        <select className=\"form-control\" id=\"type\" onChange={(event) => changePlaceholder(event)}>\r\n                            <option value=\"--Select Search Option--\">--Select Search Option--</option>\r\n                            <option value=\"City\">City</option>\r\n                            <option value=\"Zip code\">Zip code</option>\r\n                            <option value=\"Coordinates\">Coordinates</option>\r\n                        </select>\r\n                    </div>\r\n                    {option === \"Coordinates\" ? <Multiple data={changePlaceholder} /> : <Single data={changePlaceholder} />}\r\n\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <button className=\"btn mt-5 border border-light text-white\" id=\"btn\" onClick={(event) => changePlaceholder(event)}>Get Weather Data</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {UI}\r\n            </div>\r\n            <div>\r\n                {ERROR}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\n\nimport Main from '../src/Components/Main'\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/Clouds.c0e6703e.mp4\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Clouds from './assets/Clouds.mp4'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <video autoPlay playsInline muted loop id=\"myVideo\">\n                            <source src={Clouds} type=\"video/mp4\"></source>\n                            Your browser does not support HTML5 video.\n    </video>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}